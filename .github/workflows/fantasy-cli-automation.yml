name: Fantasy Football CLI Automation

on:
  schedule:
    # Thursday 6PM ET - Pre-game lineup adjustments
    - cron: '0 23 * * 4'
    # Sunday 11AM ET - Final lineup optimization
    - cron: '0 16 * * 0'
    # Monday 6PM ET - Post-game analysis and waiver prep
    - cron: '0 23 * * 1'
    # Tuesday 3AM ET - Process waivers (after ESPN processes)
    - cron: '0 8 * * 2'
  
  # Manual trigger for testing
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'thursday'
        type: choice
        options:
        - thursday
        - sunday
        - monday
        - tuesday
        - roster
        - cost
        - init

jobs:
  fantasy-automation:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'fantasy-poc/automation/package.json'
        
    - name: Install dependencies and build
      run: |
        cd fantasy-poc/shared
        npm ci
        npm run build
        
        cd ../automation
        npm ci
        npm run build
      
    - name: Initialize environment
      env:
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        ESPN_SWID: ${{ secrets.ESPN_SWID }}
        LEAGUE_1_ID: ${{ secrets.LEAGUE_1_ID }}
        LEAGUE_1_TEAM_ID: ${{ secrets.LEAGUE_1_TEAM_ID }}
        LEAGUE_1_NAME: ${{ secrets.LEAGUE_1_NAME }}
        LEAGUE_2_ID: ${{ secrets.LEAGUE_2_ID }}
        LEAGUE_2_TEAM_ID: ${{ secrets.LEAGUE_2_TEAM_ID }}
        LEAGUE_2_NAME: ${{ secrets.LEAGUE_2_NAME }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        FANTASYPROS_SESSION_ID: ${{ secrets.FANTASYPROS_SESSION_ID }}
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      run: |
        cd fantasy-poc/automation
        echo "üöÄ Initializing Fantasy AI environment..."
        node dist/cli.js init
    
    - name: Thursday - AI Lineup Optimization
      if: github.event.schedule == '0 23 * * 4' || github.event.inputs.action == 'thursday'
      env:
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        ESPN_SWID: ${{ secrets.ESPN_SWID }}
        LEAGUE_1_ID: ${{ secrets.LEAGUE_1_ID }}
        LEAGUE_1_TEAM_ID: ${{ secrets.LEAGUE_1_TEAM_ID }}
        LEAGUE_1_NAME: ${{ secrets.LEAGUE_1_NAME }}
        LEAGUE_2_ID: ${{ secrets.LEAGUE_2_ID }}
        LEAGUE_2_TEAM_ID: ${{ secrets.LEAGUE_2_TEAM_ID }}
        LEAGUE_2_NAME: ${{ secrets.LEAGUE_2_NAME }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        FANTASYPROS_SESSION_ID: ${{ secrets.FANTASYPROS_SESSION_ID }}
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
      run: |
        cd fantasy-poc/automation
        echo "ü§ñ Executing Thursday AI Optimization..."
        node dist/cli.js thursday > thursday_output.json
        
        # Extract summary for notification
        echo "THURSDAY_RESULT<<EOF" >> $GITHUB_ENV
        cat thursday_output.json >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    
    - name: Sunday - Final Lineup Check
      if: github.event.schedule == '0 16 * * 0' || github.event.inputs.action == 'sunday'
      env:
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        ESPN_SWID: ${{ secrets.ESPN_SWID }}
        LEAGUE_1_ID: ${{ secrets.LEAGUE_1_ID }}
        LEAGUE_1_TEAM_ID: ${{ secrets.LEAGUE_1_TEAM_ID }}
        LEAGUE_2_ID: ${{ secrets.LEAGUE_2_ID }}
        LEAGUE_2_TEAM_ID: ${{ secrets.LEAGUE_2_TEAM_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        cd fantasy-poc/automation
        echo "üîç Executing Sunday Final Check..."
        node dist/cli.js sunday > sunday_output.json
        
        echo "SUNDAY_RESULT<<EOF" >> $GITHUB_ENV
        cat sunday_output.json >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    
    - name: Monday - Post-Game Analysis
      if: github.event.schedule == '0 23 * * 1' || github.event.inputs.action == 'monday'
      env:
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        ESPN_SWID: ${{ secrets.ESPN_SWID }}
        LEAGUE_1_ID: ${{ secrets.LEAGUE_1_ID }}
        LEAGUE_1_TEAM_ID: ${{ secrets.LEAGUE_1_TEAM_ID }}
        LEAGUE_2_ID: ${{ secrets.LEAGUE_2_ID }}
        LEAGUE_2_TEAM_ID: ${{ secrets.LEAGUE_2_TEAM_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        FANTASYPROS_SESSION_ID: ${{ secrets.FANTASYPROS_SESSION_ID }}
      run: |
        cd fantasy-poc/automation
        echo "üìà Executing Monday Analysis..."
        node dist/cli.js monday > monday_output.json
        
        echo "MONDAY_RESULT<<EOF" >> $GITHUB_ENV
        cat monday_output.json >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    
    - name: Tuesday - Waiver Wire Analysis
      if: github.event.schedule == '0 8 * * 2' || github.event.inputs.action == 'tuesday'
      env:
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        ESPN_SWID: ${{ secrets.ESPN_SWID }}
        LEAGUE_1_ID: ${{ secrets.LEAGUE_1_ID }}
        LEAGUE_1_TEAM_ID: ${{ secrets.LEAGUE_1_TEAM_ID }}
        LEAGUE_2_ID: ${{ secrets.LEAGUE_2_ID }}
        LEAGUE_2_TEAM_ID: ${{ secrets.LEAGUE_2_TEAM_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        FANTASYPROS_SESSION_ID: ${{ secrets.FANTASYPROS_SESSION_ID }}
      run: |
        cd fantasy-poc/automation
        echo "üéØ Executing Tuesday Waiver Analysis..."
        node dist/cli.js tuesday > tuesday_output.json
        
        echo "TUESDAY_RESULT<<EOF" >> $GITHUB_ENV
        cat tuesday_output.json >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
    
    # Manual utility commands
    - name: Get Roster Info
      if: github.event.inputs.action == 'roster'
      env:
        ESPN_S2: ${{ secrets.ESPN_S2 }}
        ESPN_SWID: ${{ secrets.ESPN_SWID }}
        LEAGUE_1_ID: ${{ secrets.LEAGUE_1_ID }}
        LEAGUE_1_TEAM_ID: ${{ secrets.LEAGUE_1_TEAM_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        cd fantasy-poc/automation
        echo "üìã Getting roster information..."
        node dist/cli.js roster --league $LEAGUE_1_ID --team $LEAGUE_1_TEAM_ID
    
    - name: Get Cost Summary
      if: github.event.inputs.action == 'cost'
      env:
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
      run: |
        cd fantasy-poc/automation
        echo "üí∞ Getting cost summary..."
        node dist/cli.js cost
    
    - name: Send Discord Notification
      if: always() && env.DISCORD_WEBHOOK_URL
      env:
        DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      run: |
        if [ -n "$DISCORD_WEBHOOK_URL" ]; then
          # Determine which result to use
          RESULT=""
          ACTION_TYPE=""
          
          if [ -n "${THURSDAY_RESULT:-}" ]; then
            RESULT="$THURSDAY_RESULT"
            ACTION_TYPE="ü§ñ Thursday AI Optimization"
          elif [ -n "${SUNDAY_RESULT:-}" ]; then
            RESULT="$SUNDAY_RESULT"
            ACTION_TYPE="üîç Sunday Final Check"
          elif [ -n "${MONDAY_RESULT:-}" ]; then
            RESULT="$MONDAY_RESULT"
            ACTION_TYPE="üìà Monday Analysis"
          elif [ -n "${TUESDAY_RESULT:-}" ]; then
            RESULT="$TUESDAY_RESULT"
            ACTION_TYPE="üéØ Tuesday Waiver Analysis"
          else
            RESULT='{"success":true,"message":"Manual utility command executed"}'
            ACTION_TYPE="üõ†Ô∏è Manual Command"
          fi
          
          # Extract status and summary
          SUCCESS=$(echo "$RESULT" | jq -r '.success // true')
          TIMESTAMP=$(echo "$RESULT" | jq -r '.timestamp // "'$(date -u +%Y-%m-%dT%H:%M:%SZ)'"')
          
          # Set color based on success
          if [ "$SUCCESS" = "true" ]; then
            COLOR="3066993"  # Green
            EMOJI="‚úÖ"
          else
            COLOR="15158332"  # Red  
            EMOJI="‚ùå"
          fi
          
          # Create Discord message
          MESSAGE="{
            \"embeds\": [{
              \"title\": \"$EMOJI Fantasy Football CLI Automation\",
              \"description\": \"**$ACTION_TYPE**\\n\\nStatus: ${{ job.status }}\\nDirect CLI execution completed\",
              \"color\": $COLOR,
              \"fields\": [
                {\"name\": \"‚ö° Performance\", \"value\": \"Direct function calls (no MCP overhead)\", \"inline\": true},
                {\"name\": \"üèóÔ∏è Architecture\", \"value\": \"CLI ‚Üí Shared Library ‚Üí APIs\", \"inline\": true},
                {\"name\": \"üìÖ Timestamp\", \"value\": \"$TIMESTAMP\", \"inline\": true}
              ],
              \"footer\": {\"text\": \"Phase 2: Direct CLI Automation\"}
            }]
          }"
          
          curl -H "Content-Type: application/json" -d "$MESSAGE" "$DISCORD_WEBHOOK_URL"
          echo "‚úÖ Discord notification sent"
        else
          echo "‚ö†Ô∏è No Discord webhook configured - skipping notification"
        fi
    
    - name: Upload Results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: fantasy-cli-results-${{ github.run_number }}
        path: "fantasy-poc/automation/*_results.json"
        retention-days: 30